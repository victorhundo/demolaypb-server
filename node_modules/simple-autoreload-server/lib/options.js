
/*
 * simple-autoreload-server v0.0.13 - 2015-02-13
 * <https://github.com/cytb/simple-autoreload-server>
 *
 * Copyright (c) 2015 cytb
 *
 * Licensed under the MIT License.
 * <http://www.opensource.org/licenses/mit-license.php>
 */

var utils,defaultInjectionCode,ref$,out$="undefined"!=typeof exports&&exports||this,join$=[].join;utils=require("./utils"),defaultInjectionCode=utils.load(__dirname,"./client.js"),ref$=out$,ref$.generateMinimistOpt=function(a){var b,c,d,e,f,g,h,i,j,k,l;null==a&&(a=this.commandlineOptions),b={"boolean":[],string:[],alias:{},"default":{}};for(c in a){for(d=a[c],e=null!=(f=d.type)?f:null,g=null!=(f=d.short)?f:[],h=null!=(f=d.def)?f:null,i=e===String&&"string"||"boolean",b[i]=b[i].concat(c),j=0,k=(d=[].concat(g)).length;k>j;++j)l=d[j],b.alias[l]=[c];null!=h&&(b["default"][c]=h)}return b},ref$.generateCommandlineHelp=function(){var a,b,c,d,e,f,g,h=[];for(a in b=this.commandlineOptions)c=b[a],d=null!=c.short&&"-"+c.short||[],e=c.type===String&&"<param>"||[],f=[join$.call(["--"+a].concat(d),", ")],g=join$.call(f.concat(e)," "),h.push([g,c.desc].concat(null!=c.def?c.def:[]));return h},ref$.commandlineOptions={root:{"short":"d",type:String,desc:"set base directory to publish.",def:"."},port:{"short":"p",type:String,desc:"set port to listen (http).",def:8080},"list-directory":{"short":"l",desc:"enable directory listing.",def:!0},watch:{type:String,"short":"w",desc:"regex pattern of file to watch.",def:/^/},"watch-delay":{type:String,desc:"time to delay before fireing watch event (in ms).",def:1},verbose:{"short":"v",desc:"enable verbose log.",def:!1},recursive:{"short":"r",desc:"watch directory recursively. (may take a while at startup)",def:!0},"follow-symlink":{"short":"l",desc:"follow symbolic-link. (it affects only when the resursive option specified.",def:!1},"force-reload":{type:String,"short":"f",desc:"regex pattern for file forced to reload page.",def:null},"broadcast-delay":{type:String,desc:"time to delay before broadcasting file update event (in ms).",def:0},"no-default-script":{desc:"disable injection of default client script.",def:!1},"inject-file":{type:String,"short":"I",desc:"set path to additional file to be injected.",def:null},"inject-method":{type:String,"short":"M",desc:"specify the method [prepend or append]",def:"p"},"inject-match-text":{type:String,"short":"T",desc:"specify the pattern where to inject",def:null},"inject-match-file":{type:String,"short":"F",desc:"specify the pattern for file to inject",def:null},version:{"short":"V",desc:"show version"},help:{"short":"h",desc:"show help"}},ref$.defaultInjectionCode=defaultInjectionCode,ref$.defaultModuleOptions={port:8080,root:process.cwd(),listDirectory:!0,verbose:!1,recursive:!0,followSymlink:!1,watchDelay:1,watch:/^/,forceReload:!1,onmessage:function(){},inject:{code:"<script type='text/javascript'>\n(function(){"+defaultInjectionCode+"})();\n</script>",match:/<\/(body|head|html)>/i,file:/(\.(php|html?|cgi|pl|rb))$/i,prepend:!0}};