
/*
 * simple-autoreload-server v0.0.13 - 2015-02-13
 * <https://github.com/cytb/simple-autoreload-server>
 *
 * Copyright (c) 2015 cytb
 *
 * Licensed under the MIT License.
 * <http://www.opensource.org/licenses/mit-license.php>
 */

var fs,path,utils,flatten,visitDir,RecursiveWatcher;fs=require("fs"),path=require("path"),utils=require("./utils"),flatten=utils.flatten,visitDir=utils.visitDir,RecursiveWatcher=function(){function a(a){var b,c,d,e;this.root=a.root,this.delay=null!=(b=a.delay)?b:5,this.onChange=null!=(b=a.onChange)?b:function(){},this.onError=null!=(b=a.onError)?b:function(){},this.recursive=null!=(b=a.recursive)?b:!1,this.followSymlink=null!=(b=a.followSymlink)?b:!1,c=this.followSymlink&&function(){return!0}||function(a){return!a.isSymbolicLink()},d=function(a,b){return b.isDirectory()&&c(b)},e=function(a){return this.onError(a,this.root)},this.dirs=this.recursive?flatten(visitDir(this.root,d,null,e)):[this.root],this.watchers=[]}a.displayName="RecursiveWatcher";var b=a.prototype;return b.start=function(a){var b,c,d,e,f,g;return b=null!=a?a:{},this.onChange=null!=(c=b.onChange)?c:this.onChange,this.onError=null!=(c=b.onError)?c:this.onError,this.stop(),d=this,e={},f=function(a){return function(b,c){var f,g,h;if(null!=c&&null!=a){if(f=path.join(a,c),g=e[f],h=function(){return delete e[f],d.onChange(b,f)},null!=g){if(g.expire>Date.now())return;clearTimeout(g.timer)}return e[f]={expire:Date.now()+d.delay,timer:setTimeout(h,d.delay)}}}},g=function(a){return function(b){return d.onError(b,a)}},this.watchers=this.dirs.map(function(a){return fs.watch(a).on("change",f(a)).on("error",g(a))})},b.stop=function(){return this.watchers.forEach(function(a){return a.close()})},a}(),module.exports=function(a){var b,c,d;return b=a.root,c=a.onChange,d=a.delay,new RecursiveWatcher(a)};